plugins {
    id 'java'
    id 'ru.alfalab.microservice-configurer' version '8.3.6'
    id 'ru.alfalab.library-configurer' version '8.3.6'
}

group = "ru.alfabank.microservices.dfa"
version = project.version


allprojects {
    group = "ru.alfabank.microservices.dfa"
    version = project.version

    repositories {
        maven {
            name = "plugins"
            url = uri("http://binary/artifactory/plugins-release")
            allowInsecureProtocol = true
        }
        maven {
            name = "gradle-plugins"
            url = uri("http://binary/artifactory/gradleplugins")
            allowInsecureProtocol = true
        }
        maven {
            name = "libs-snapshots"
            url = uri("http://binary/artifactory/libs-snapshot-local")
            allowInsecureProtocol = true
            mavenContent {
                excludeVersionByRegex(".*", ".*", "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)?\$")
            }
        }
        maven {
            name = "libs-releases"
            url = uri("http://binary/artifactory/libs-release-local")
            allowInsecureProtocol = true
            mavenContent {
                includeVersionByRegex(".*", ".*", "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)?\$")
            }
        }
        maven {
            name = "waves-snapshots"
            url = uri("http://binary/artifactory/dfa-maven-snapshots/")
            allowInsecureProtocol = true
            mavenContent {
                snapshotsOnly()
            }
        }
        maven {
            name = "waves-releases"
            url = uri("http://binary/artifactory/dfa-maven-releases/")
            allowInsecureProtocol = true
            mavenContent {
                releasesOnly()
            }
        }
        quality {
            spotbugs = false
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }
}


bootJar.enabled = false

tasks.named('test') {
    useJUnitPlatform()
}
