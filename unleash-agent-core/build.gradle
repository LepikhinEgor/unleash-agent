plugins {
    id 'java'
    id 'java-library'
    id 'checkstyle'
    id 'jacoco'
}

group = 'ru.baldenna'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    api "io.github.openfeign:feign-core:${Versions.feign}"
    api "io.github.openfeign:feign-jackson:${Versions.feign}"

    compileOnly "org.projectlombok:lombok:${Versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${Versions.lombok}"

    implementation "org.slf4j:slf4j-api:${Versions.slf4j}"
    implementation "ch.qos.logback:logback-classic:${Versions.logback}"

    api "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${Versions.jacksonDatabind}"
    api("com.fasterxml.jackson.core:jackson-databind:${Versions.jacksonDatabind}")
    api("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${Versions.jacksonDatabind}")

    testImplementation platform("org.junit:junit-bom:${Versions.junit}")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.assertj:assertj-core:${Versions.assertj}"

    testImplementation "org.testcontainers:testcontainers:${Versions.testcontainers}"
    testImplementation "org.testcontainers:postgresql:${Versions.testcontainers}"
}

checkstyle {
    toolVersion = '11.0.0'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

test {
    useJUnitPlatform()
}
